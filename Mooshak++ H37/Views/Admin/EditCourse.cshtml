@model Mooshak___H37.Models.Viewmodels.CourseViewModel

@{
    ViewBag.Title = "EditCourse";
}

<h2>EditCourse</h2>


<link type="text/css" rel="stylesheet" href="~/Content/Admin.css">

<div class="clearfix">



	@*<div class="admin-createCourse-buttons">
		<button class="btn btn-primary upload-csv-button" id="createUser">Upload CSV</button>
	</div>*@


	<div class="large-left-portion">
		@using (Html.BeginForm("EditCourse", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
		{
			@Html.AntiForgeryToken()

			@Html.ValidationSummary("", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
				</div>
			</div>
			@Html.ValidationSummary("", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(m => m.StartDate, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBoxFor(m => m.StartDate, new { @class = "form-control" })
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(m => m.Isactive, new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.CheckBoxFor(m => m.Isactive, new { @class = "form-control" })
				</div>
			</div>
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" class="btn btn-default" value="Save Changes" />
				</div>
			</div>
		}

		<br />
		<br />
	</div>
	<div class="userTable">
		<div class="form-inline right-portion" id="addUser">
        @using (Html.BeginForm("addUserToCurse", "Admin", FormMethod.Post, new { @class = "form-horizontal addUserForm", role = "form" }))
        {
            @Html.HiddenFor(model => model.ID)
            

            List<SelectListItem> sel = new List<SelectListItem>();
            foreach (var item in @ViewBag.userList)
            {
                SelectListItem i = new SelectListItem();
                i.Text = item.Name;
                i.Value = item.ID.ToString();

                sel.Add(i);
            }


            <div class="form-group addUserToCourse">
                @Html.DropDownList("name", new SelectList(sel, "Value", "Text"), new { @class= "form-control" })
            </div>

            <div class="form-group addUserToCourse" id="teacherCheckBox">
                <label for="Teacher">Teacher?</label>
                @Html.CheckBox("Teacher", new { @id="Teacher", @class = "form-control" })
            </div>

            <div class="form-group addUserToCourse">
		        <input type="submit" class="btn btn-primary addUserButton" value="Add User"/>
            </div>
        }
		</div>
		<br />
		<table class="table table-hover">
			<thead>
				<tr>
					<th>Nr</th>
					<th>Name</th>
					<th>Email</th>
					<th>User Type</th>
					<th>Date Added</th>
				</tr>
			</thead>
			<tbody>
			
				@{int rowNo = 0;}
				@foreach (var item in Model.User)
				{
					<tr>
						<td>@(rowNo += 1)</td>
						<td>
							@Html.DisplayFor(modelItem => item.Name)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Email)
						</td>
						<td>
							@if (item.RoleID == 1)
							{
								@Html.Raw("Student")
							}
							else if (item.RoleID == 2)
							{
								@Html.Raw("Teacher")
							}
							else if (item.RoleID == 2)
							{
								@Html.Raw("Admin")
							}
						</td>
						<td>05-May-16 13:37:00</td>
					</tr>
				}
			<tbody>
		</table>
	</div>





</div>


@*
	

	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			<h4>CourseViewModel</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.ID)

			<div class="form-group">
				@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Isactive, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.Isactive)
						@Html.ValidationMessageFor(model => model.Isactive, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IsRemoved, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.IsRemoved)
						@Html.ValidationMessageFor(model => model.IsRemoved, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
		</div>
	}

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>

	@section Scripts {
		@Scripts.Render("~/bundles/jqueryval")
	}
*@